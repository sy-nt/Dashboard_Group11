version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: dbs-api
    container_name: dbs-api
    restart: always
    tty: true
    volumes:
      - ./:/dbs-api
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - db
    command: sh -c 'if [ "$NODE_ENV" = "production" ]; then npm run start; else echo "API service disabled in non-production mode."; fi'

    networks:
      - mynetwork
  db:
    image: postgres:14.1-alpine
    container_name: ${DB_NAME}
    restart: always
    tty: true
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '8432:5432'
    volumes:
      - dbs-db:/var/lib/postgresql/data
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4:6.18
    networks:
      - mynetwork
    ports:
      - '8080:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    env_file:
      - docker.env
volumes:
  dbs-db:
    driver: local
  pgadmin:

networks:
  mynetwork:
    driver: bridge
